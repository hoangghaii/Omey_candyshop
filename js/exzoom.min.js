!function (t, n) { let e = null, i = null, o = null, l = null, s = null, a = null, h = 0, c = 0, u = 0, d = null, r = null, p = "current", f = null, m = null, v = null, g = null, x = null, w = 0, _ = 0, y = [], z = null, I = null, W = null, H = null, $ = null, M = null, P = 0, b = 0, B = 0, j = 0, k = {}, q = { navWidth: 60, navHeight: 60, navItemNum: 5, navItemMargin: 7, navBorder: 1, autoPlay: !0, autoPlayTimeout: 2e3 }, N = { init: function (n) { let s = t.extend({}, q, n); i = (e = this).find(".exzoom_img_box"), a = e.find(".exzoom_img_ul"), d = e.find(".exzoom_nav"), g = e.find(".exzoom_prev_btn"), x = e.find(".exzoom_next_btn"), l = o = e.outerWidth(), k.navWidth = s.navWidth, k.navHeight = s.navHeight, k.navBorder = s.navBorder, k.navItemMargin = s.navItemMargin, k.navItemNum = s.navItemNum, k.autoPlay = s.autoPlay, k.autoPlayTimeout = s.autoPlayTimeout, v = i.find("img"), w = v.length, function (t) { let n = setInterval(function () { let e = 0, i = t.length; t.each(function () { this.complete && e++ }), e === i && (clearInterval(n), T()) }, 100) }(v) }, prev: function () { A() }, next: function () { Y() }, setImg: function () { let t = arguments[0]; E(t, function (n, e) { $.attr("src", t), I.attr("src", t), a.find("li").length === w + 1 && a.find("li:last").remove(), a.append('<li style="width: ' + o + 'px;"><img src="' + t + '"></li>'), D(F(t, n, e)) }) } }; function T() { i.append("<div class='exzoom_img_ul_outer'></div>"), d.append("<p class='exzoom_nav_inner'></p>"), s = i.find(".exzoom_img_ul_outer"), r = d.find(".exzoom_nav_inner"), s.append(a); for (let t = 0; t < w; t++) { y[t] = F(v.eq(t)); let n = a.find("li").eq(t); n.css("width", o), n.find("img").css({ "margin-top": y[t][5], width: y[t][3] }) } f = d.find("span"), m = 2 * k.navBorder + k.navHeight, k.exzoom_navWidth = (m + k.navItemMargin) * k.navItemNum, k.exzoom_nav_innerWidth = (m + k.navItemMargin) * w, f.eq(_).addClass(p), d.css({ height: m + "px", width: o - g.width() - x.width() }), r.css({ width: k.exzoom_nav_innerWidth + "px" }), f.css({ "margin-left": k.navItemMargin + "px", width: k.navWidth + "px", height: k.navHeight + "px" }), c = o * w, u = o * (w - 1), a.css("width", c), i.append("\n<div class='exzoom_zoom_outer'>\n    <span class='exzoom_zoom'></span>\n</div>\n<p class='exzoom_preview'>\n    <img class='exzoom_preview_img' src='' />\n</p>\n            "), z = i.find(".exzoom_zoom"), I = i.find(".exzoom_main_img"), W = i.find(".exzoom_zoom_outer"), H = i.find(".exzoom_preview"), $ = i.find(".exzoom_preview_img"), i.css({ width: l + "px", height: l + "px" }), s.css({ width: l + "px", height: l + "px" }), H.css({ width: l + "px", height: l + "px", left: l + 5 + "px" }), D(y[_]), S(), a.on("touchstart", function (t) { let e = C(t); P = e.x, b = e.y; let i = a.css("left"); h = parseInt(i), n.clearInterval(M) }), a.on("touchmove", function (t) { let n, e = C(t); B = e.x, j = e.y, n = Q(n = h + B - P), a.css("left", n) }), a.on("touchend", function (t) { console.log(B < P), B < P ? Y() : B > P && A(), S() }), W.on("mousedown", function (t) { let n = C(t); P = n.x, b = n.y; let e = a.css("left"); h = parseInt(e) }), W.on("mouseup", function (t) { let n = e.offset(); P - n.left < o / 2 ? A() : P - n.left > o / 2 && Y() }), e.on("mouseenter", function () { n.clearInterval(M) }), e.on("mouseleave", function () { S() }), W.on("mouseenter", function () { z.css("display", "block"), H.css("display", "block") }), W.on("mousemove", function (t) { let n = z.width() / 2, e = W.width() - n, i = W.height() - n, o = t.pageX - W.offset().left, l = t.pageY - W.offset().top, s = o - n, a = l - n; o <= n && (s = 0), o >= e && (s = e - n), l <= n && (a = 0), l >= i && (a = i - n), z.css({ left: s + "px", top: a + "px" }), $.css({ left: -s * H.width() / z.width() + "px", top: -a * H.width() / z.width() + "px" }) }), W.on("mouseleave", function () { z.css("display", "none"), H.css("display", "none") }), H.on("mouseenter", function () { z.css("display", "none"), H.css("display", "none") }), x.on("click", function () { Y() }), g.on("click", function () { A() }), f.hover(function () { X(_ = t(this).index()) }) } function C(t) { let e, i, o = t || n.event, l = o; return void 0 !== o.touches && o.touches.length > 0 && (l = o.touches[0]), { x: e = l.clientX || l.pageX, y: i = l.clientY || l.pageY } } function Q(t) { return -t > u ? (t = -u, _ = 0) : t > 0 && (t = 0), t } function X(t) { void 0 === t && alert("exzoom 中的 move 函数的 direction 参数必填"), _ > y.length - 1 && (_ = 0), f.eq(_).addClass(p).siblings().removeClass(p); let n = d.width(), e = 0, i = (k.navItemMargin + k.navWidth + 2 * k.navBorder) * (_ + 1); i > n && (e = o - i), r.css({ left: e }); let l = -o * _; l = Q(l), a.stop().animate({ left: l }, 500), D(y[_]) } function Y() { ++_ > w && (_ = w), X("right") } function A() { --_ < 0 && (_ = 0), X("left") } function S() { k.autoPlay && (M = n.setInterval(function () { _ >= w && (_ = 0), _++, X("right") }, k.autoPlayTimeout)) } function D(t) { void 0 !== t && ($.attr("src", t[0]), I.attr("src", t[0]).css({ width: t[3] + "px", height: t[4] + "px" }), W.css({ width: t[3] + "px", height: t[4] + "px", top: t[5] + "px", left: t[6] + "px", position: "relative" }), z.css({ width: t[7] + "px", height: t[7] + "px" }), $.css({ width: t[8] + "px", height: t[9] + "px" })) } function E(t, n) { let e = new Image; if (e.src = t, void 0 === n) return { width: e.width, height: e.height }; e.complete ? n(e.width, e.height) : e.onload = function () { n(e.width, e.height) } } function F(t, n, e) { let i, o = []; if ("string" == typeof t) i = t; else { let o = E(i = t.attr("src")); n = o.width, e = o.height } o[0] = i, o[1] = n, o[2] = e; let s = o[1] / o[2]; if (1 === s) o[3] = l, o[4] = l, o[5] = 0, o[6] = 0, o[7] = l / 2, o[8] = 2 * l, o[9] = 2 * l, r.append(`<span><img src="${i}" width="${k.navWidth}" height="${k.navHeight}"/></span>`); else if (s > 1) { o[3] = l, o[4] = l / s, o[5] = (l - o[4]) / 2, o[6] = 0, o[7] = o[4] / 2, o[8] = 2 * l * s, o[9] = 2 * l; let t = (k.navHeight - k.navWidth / s) / 2; r.append(`<span><img src="${i}" width="${k.navWidth}" style='top:${t}px;' /></span>`) } else if (s < 1) { o[3] = l * s, o[4] = l, o[5] = 0, o[6] = (l - o[3]) / 2, o[7] = o[3] / 2, o[8] = 2 * l, o[9] = 2 * l / s; let t = (k.navWidth - k.navHeight * s) / 2; r.append(`<span><img src="${i}" height="${k.navHeight}" style="left:${t}px;"/></span>`) } return o } t.fn.extend({ exzoom: function (n, e) { if (0 === arguments.length || "object" == typeof n && !e) { if (0 !== this.length) return N.init.apply(this, arguments); t.error("Selector is empty when call jQuery.exzomm") } else { if (N[n]) return N[n].apply(this, Array.prototype.slice.call(arguments, 1)); t.error("Method " + n + "does not exist on jQuery.exzomm") } } }) }(jQuery, window);